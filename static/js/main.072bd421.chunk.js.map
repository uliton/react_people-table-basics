{"version":3,"sources":["components/Header/Header.tsx","components/HomePage/HomePage.tsx","api.ts","components/PersonRow/PersonRow.tsx","components/PeopleTable/PeopleTable.tsx","components/PeoplePage/PeoplePage.tsx","components/PageNotFound/PageNotFound.tsx","App.tsx","index.tsx"],"names":["Header","to","type","className","HomePage","getPeople","a","fetch","then","response","json","result","PersonRow","person","name","sex","born","died","mother","father","PeopleTable","people","map","slug","PeoplePage","useState","setPeople","getAllPeople","filteredPeople","find","woman","motherName","man","fatherName","useEffect","PageNotFound","App","path","element","ReactDOM","render","document","getElementById"],"mappings":"0NAGaA,EAAmB,WAC9B,OACE,gCACE,cAAC,IAAD,CAAMC,GAAG,IAAT,SACE,wBAAQC,KAAK,SAASC,UAAU,SAAhC,yBAIF,cAAC,IAAD,CAAMF,GAAG,UAAT,SACE,wBAAQC,KAAK,SAASC,UAAU,SAAhC,+BCVKC,EAAqB,WAChC,OACE,4C,sCCFSC,EAAS,uCAAG,4BAAAC,EAAA,sEACFC,MAAM,GAAD,OAHhB,sEAIPC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAFN,cACjBC,EADiB,yBAIhBA,GAJgB,2CAAH,qDCITC,EAA6B,SAAC,GAAgB,IAAD,IAAbC,EAAa,EAAbA,OAC3C,OACE,qBACEV,UAAU,SADZ,UAGE,6BAAKU,EAAOC,OACZ,6BAAKD,EAAOE,MACZ,6BAAKF,EAAOG,OACZ,6BAAKH,EAAOI,OACZ,8BAAK,UAAAJ,EAAOK,cAAP,eAAeJ,OAAQ,cAC5B,8BAAK,UAAAD,EAAOM,cAAP,eAAeL,OAAQ,kBCTrBM,EAA+B,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAC7C,OACE,wBAAOlB,UAAU,cAAjB,UACE,gCACE,+BACE,sCACA,qCACA,sCACA,sCACA,wCACA,6CAGJ,gCACGkB,EAAOC,KAAI,SAAAT,GAAM,OAAI,cAAC,EAAD,CAAWA,OAAQA,GAAaA,EAAOU,eCjBxDC,EAAuB,WAClC,MAEIC,mBAA8B,IAFlC,mBAAOJ,EAAP,KACEK,EADF,KAIMC,EAAY,uCAAG,8BAAArB,EAAA,sEACED,IADF,OACbM,EADa,OAGbiB,EAAiBjB,EAAOW,KAAI,SAACT,GACjC,IAAMK,EAASP,EACZkB,MAAK,SAACC,GAAD,OAAmBA,EAAMhB,OAASD,EAAOkB,eAAe,KAC1DZ,EAASR,EACZkB,MAAK,SAACG,GAAD,OAAiBA,EAAIlB,OAASD,EAAOoB,eAAe,KAE5D,OAAO,2BAAKpB,GAAZ,IAAoBK,SAAQC,cAG9BO,EAAUE,GAZS,2CAAH,qDAmBlB,OAJAM,qBAAU,WACRP,MACC,IAGD,qCACE,6CACCN,GAAU,cAAC,EAAD,CAAaA,OAAQA,QC7BzBc,EAAyB,WACpC,OACE,qCACE,wCAGA,0DCcSC,G,MAfH,WACV,OACE,gCACE,cAAC,EAAD,IAEA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,IAAIC,QAAS,cAAC,EAAD,MACzB,cAAC,IAAD,CAAOD,KAAK,UAAUC,QAAS,cAAC,EAAD,MAC/B,cAAC,IAAD,CAAOD,KAAK,IAAIC,QAAS,cAAC,EAAD,MACzB,cAAC,IAAD,CAAOD,KAAK,QAAQC,QAAS,cAAC,IAAD,CAAUrC,GAAG,gBCXlDsC,IAASC,OACP,cAAC,IAAD,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.072bd421.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\n\nexport const Header: React.FC = () => {\n  return (\n    <nav>\n      <Link to=\"/\">\n        <button type=\"button\" className=\"button\">\n          Home Page\n        </button>\n      </Link>\n      <Link to=\"/people\">\n        <button type=\"button\" className=\"button\">\n          People Page\n        </button>\n      </Link>\n\n    </nav>\n  );\n};\n","import React from 'react';\n\nexport const HomePage: React.FC = () => {\n  return (\n    <h2>Home Page</h2>\n  );\n};\n","const URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nexport const getPeople = async () => {\n  const result = await fetch(`${URL}`)\n    .then(response => response.json());\n\n  return result;\n};\n","import React from 'react';\n\ntype Props = {\n  person: PersonWithParents,\n};\n\nexport const PersonRow: React.FC<Props> = ({ person }) => {\n  return (\n    <tr\n      className=\"Person\"\n    >\n      <td>{person.name}</td>\n      <td>{person.sex}</td>\n      <td>{person.born}</td>\n      <td>{person.died}</td>\n      <td>{person.mother?.name || 'no mother'}</td>\n      <td>{person.father?.name || 'no father'}</td>\n    </tr>\n  );\n};\n","import React from 'react';\nimport { PersonRow } from '../PersonRow';\n\ntype Props = {\n  people: PersonWithParents[],\n};\n\nexport const PeopleTable: React.FC<Props> = ({ people }) => {\n  return (\n    <table className=\"PeopleTable\">\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n      <tbody>\n        {people.map(person => <PersonRow person={person} key={person.slug} />)}\n      </tbody>\n    </table>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { getPeople } from '../../api';\nimport { PeopleTable } from '../PeopleTable';\n\nexport const PeoplePage: React.FC = () => {\n  const [people,\n    setPeople,\n  ] = useState<PersonWithParents[]>([]);\n\n  const getAllPeople = async () => {\n    const result = await getPeople();\n\n    const filteredPeople = result.map((person: Person) => {\n      const mother = result\n        .find((woman: Person) => woman.name === person.motherName) || null;\n      const father = result\n        .find((man: Person) => man.name === person.fatherName) || null;\n\n      return { ...person, mother, father };\n    });\n\n    setPeople(filteredPeople);\n  };\n\n  useEffect(() => {\n    getAllPeople();\n  }, []);\n\n  return (\n    <>\n      <h2>People Page</h2>\n      {people && <PeopleTable people={people} />}\n    </>\n  );\n};\n","import React from 'react';\n\nexport const PageNotFound: React.FC = () => {\n  return (\n    <>\n      <h1>\n        Sorry!\n      </h1>\n      <h2>\n        Page NOT FOUND ! ! !\n      </h2>\n    </>\n\n  );\n};\n","import { Route, Routes, Navigate } from 'react-router-dom';\nimport { Header } from './components/Header';\nimport { HomePage } from './components/HomePage';\nimport { PeoplePage } from './components/PeoplePage';\nimport { PageNotFound } from './components/PageNotFound';\nimport './App.scss';\n\nconst App = () => {\n  return (\n    <div>\n      <Header />\n\n      <Routes>\n        <Route path=\"/\" element={<HomePage />} />\n        <Route path=\"/people\" element={<PeoplePage />} />\n        <Route path=\"*\" element={<PageNotFound />} />\n        <Route path=\"/home\" element={<Navigate to=\"/\" />} />\n      </Routes>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}